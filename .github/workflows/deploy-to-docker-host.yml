---
name: Deploy to Docker Host

'on':
  workflow_run:
    workflows: ["Build and Push Docker Container"]
    types:
      - completed
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    # Only run if the docker-build workflow completed successfully
    # and actually pushed images (not just PR builds)
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      (github.event.workflow_run.event == 'push' ||
       (github.event.workflow_run.event == 'pull_request_target' &&
        github.event.workflow_run.head_branch == 'master'))

    steps:
      - name: Set up environment
        run: |
          echo "Setting up environment variables and configuration"
          echo "GITHUB_TOKEN_SET=$([ -n '${{ secrets.GITHUB_TOKEN }}' ] && echo 'true' || echo 'false')" >> $GITHUB_ENV
          echo "DOCKER_HOST_SET=$([ -n '${{ secrets.DOCKER_HOST }}' ] && echo 'true' || echo 'false')" >> $GITHUB_ENV
          echo "SSH_KEY_SET=$([ -n '${{ secrets.SSH_PRIVATE_KEY }}' ] && echo 'true' || echo 'false')" >> $GITHUB_ENV

      - name: Deploy to Docker Host
        uses: appleboy/ssh-action@v1.0.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        with:
          host: ${{ secrets.DOCKER_HOST }}
          username: ${{ secrets.DOCKER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: GITHUB_TOKEN,GITHUB_ACTOR,GITHUB_REPOSITORY
          script: |
            # Login to GHCR
            echo $GITHUB_TOKEN | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

            # Pull the latest image from GHCR
            docker pull ghcr.io/$GITHUB_REPOSITORY:latest

            # Stop and remove existing container if it exists
            docker stop graphhopper || true
            docker rm graphhopper || true

            # Run the new container with persistent volume
            docker run -d \
              --name graphhopper \
              -p 8989:8989 \
              -v graphhopper:/app/graphhopper \
              --restart unless-stopped \
              ghcr.io/$GITHUB_REPOSITORY:latest

            # Clean up old images to save space
            docker image prune -f

            # Logout for security
            docker logout ghcr.io
